name: RustDesk Server Setup

on:
  workflow_dispatch:

jobs:
  rustdesk-server:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # 6 hour max

    steps:
    - name: Install dependencies
      run: sudo apt update && sudo apt install -y wget unzip

    - name: Download and setup RustDesk
      run: |
        # Clean previous runs
        rm -rf rustdesk-server || true
        
        # Download and extract
        wget https://github.com/rustdesk/rustdesk-server/releases/latest/download/rustdesk-server-linux-amd64.zip
        unzip rustdesk-server-linux-amd64.zip -d rustdesk-server
        
        # Navigate to binary directory
        cd rustdesk-server/amd64
        chmod +x hbbr hbbs
        
        # Start services (force new key generation)
        nohup ./hbbs -r 0.0.0.0 > hbbs.log 2>&1 &
        nohup ./hbbr > hbbr.log 2>&1 &
        
        # Wait for key files to generate
        echo "Waiting for key generation..."
        while [ ! -f "id_ed25519.pub" ]; do
          sleep 1
        done
        
        # Extract Remote ID from public key
        REMOTE_ID=$(head -c 16 id_ed25519.pub | base64 | tr -d '=')
        echo "REMOTE_ID=$REMOTE_ID" >> $GITHUB_ENV
        echo "PUBLIC_KEY=$(cat id_ed25519.pub)" >> $GITHUB_ENV
        echo "SERVER_IP=$(curl -s ifconfig.me)" >> $GITHUB_ENV

    - name: Display connection info
      run: |
        echo "=========================================="
        echo "üñ•Ô∏è RUSTDESK SERVER - CONNECTION DETAILS"
        echo "üîë YOUR REMOTE ID: ${{ env.REMOTE_ID }}"
        echo "üîê Public Key: ${{ env.PUBLIC_KEY }}"
        echo "üåê Server IP: ${{ env.SERVER_IP }}"
        echo ""
        echo "INSTRUCTIONS:"
        echo "1. In RustDesk client:"
        echo "   - Enter this ID: ${{ env.REMOTE_ID }}"
        echo "   - Password will generate automatically"
        echo "2. Verify the public key matches when prompted"
        echo ""
        echo "For direct connection (if ports are open):"
        echo "- Set both ID/Relay servers to: ${{ env.SERVER_IP }}"
        echo ""
        echo "Session expires after 6 hours"
        echo "=========================================="
        
        # Keep alive
        sleep 6h
