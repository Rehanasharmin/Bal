name: RustDesk Server Setup

on:
  workflow_dispatch:

jobs:
  rustdesk-server:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # 6 hour max

    steps:
    - name: Install dependencies
      run: sudo apt update && sudo apt install -y wget unzip

    - name: Setup RustDesk Server
      id: setup
      run: |
        # Clean previous runs
        rm -rf rustdesk-server || true
        
        # Download and extract
        wget https://github.com/rustdesk/rustdesk-server/releases/latest/download/rustdesk-server-linux-amd64.zip
        unzip rustdesk-server-linux-amd64.zip -d rustdesk-server
        
        # Navigate to binary directory
        cd rustdesk-server/amd64
        chmod +x hbbr hbbs
        
        # Start services with verbose logging
        nohup ./hbbs -r 0.0.0.0 > hbbs.log 2>&1 &
        echo $! > hbbs.pid
        nohup ./hbbr > hbbr.log 2>&1 &
        echo $! > hbbr.pid
        
        # Wait for key files to generate
        echo "Waiting for ID generation..."
        for i in {1..60}; do
          if [ -f "id_ed25519.pub" ]; then
            # Extract ID from public key (first 16 chars of base64)
            ID=$(head -c 16 id_ed25519.pub | base64 | tr -d '=')
            echo "SERVER_ID=$ID" >> $GITHUB_ENV
            echo "PUBLIC_KEY=$(cat id_ed25519.pub)" >> $GITHUB_ENV
            echo "WORKDIR=$(pwd)" >> $GITHUB_ENV
            break
          fi
          sleep 1
        done

        if [ -z "$ID" ]; then
          echo "::error::Failed to generate key files"
          ls -la
          exit 1
        fi

    - name: Display connection info
      run: |
        cd ${{ env.WORKDIR }}
        echo "=========================================="
        echo "🖥️ RUSTDESK SERVER - CONNECTION DETAILS"
        echo "🔑 Server ID: ${{ env.SERVER_ID }}"
        echo "🔐 Public Key: ${{ env.PUBLIC_KEY }}"
        echo ""
        echo "⚙️ Process Status:"
        ps aux | grep -E 'hbbs|hbbr' || true
        echo ""
        echo "📜 Server Logs:"
        cat hbbs.log || echo "No logs found"
        echo ""
        echo "🌐 Listening Ports:"
        ss -tulnp | grep -E '21115|21116|21117|21118|21119' || true
        echo "=========================================="
        
        # Keep alive and monitor processes
        while sleep 30; do
          if ! ps -p $(cat hbbs.pid) > /dev/null || ! ps -p $(cat hbbr.pid) > /dev/null; then
            echo "::error::One or more RustDesk processes crashed"
            exit 1
          fi
          echo "✅ Services still running (PID hbbs:$(cat hbbs.pid), hbbr:$(cat hbbr.pid))"
        done
