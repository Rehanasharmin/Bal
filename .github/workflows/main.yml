name: RustDesk Server Setup

on:
  workflow_dispatch:

jobs:
  rustdesk-server:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # 6 hour max

    steps:
    - name: Install dependencies
      run: sudo apt update && sudo apt install -y wget unzip

    - name: Setup RustDesk Server
      run: |
        # Clean setup
        rm -rf rustdesk-server || true
        
        # Download and extract
        wget https://github.com/rustdesk/rustdesk-server/releases/latest/download/rustdesk-server-linux-amd64.zip
        unzip rustdesk-server-linux-amd64.zip -d rustdesk-server
        cd rustdesk-server/amd64
        chmod +x hbbr hbbs

        # Generate new keys (ensures fresh ID)
        ./hbbs --gen-key -k .
        
        # Start services with debug logging
        nohup ./hbbs -r 0.0.0.0 -k _ > hbbs.log 2>&1 &
        nohup ./hbbr -k _ > hbbr.log 2>&1 &
        
        # Get ID from key file (guaranteed to exist)
        REMOTE_ID=$(cat id_ed25519.pub | base64 | head -c 16)
        echo "REMOTE_ID=$REMOTE_ID" >> $GITHUB_ENV
        echo "PUBLIC_KEY=$(cat id_ed25519.pub)" >> $GITHUB_ENV

    - name: Display Connection Info
      run: |
        echo "=========================================="
        echo "üñ•Ô∏è RUSTDESK REMOTE ACCESS"
        echo "üîë YOUR REMOTE ID: ${{ env.REMOTE_ID }}"
        echo "üîê Public Key: ${{ env.PUBLIC_KEY }}"
        echo ""
        echo "INSTRUCTIONS:"
        echo "1. In RustDesk client, enter this ID: ${{ env.REMOTE_ID }}"
        echo "2. Password will generate automatically"
        echo "3. Verify the public key matches when prompted"
        echo ""
        echo "Note: Session expires after 6 hours"
        echo "=========================================="
        
        # Keep alive
        sleep 6h
