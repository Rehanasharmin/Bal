name: RustDesk Access

on:
  workflow_dispatch:

jobs:
  rustdesk-session:
    runs-on: self-hosted  # Use the self-hosted runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Start XFCE and RustDesk session
        env:
          # Use a GitHub secret for the RustDesk password
          RUSTDESK_PASSWORD: ${{ secrets.RUSTDESK_PASSWORD }}
        run: |
          # Start a virtual display for the graphical session
          nohup dbus-launch xfce4-session > /dev/null 2>&1 &
          
          # Wait for XFCE to start
          sleep 10
          
          # Set the RustDesk password from a GitHub Secret
          # Note: The command-line option for setting the password may vary
          #       by version. This is an example.
          rustdesk --password $RUSTDESK_PASSWORD
          
          # Start RustDesk in headless mode, assuming it connects to the XFCE session
          # The exact command may need adjustment based on RustDesk version/config
          nohup rustdesk --start > /dev/null 2>&1 &
          
          # Retrieve and display the RustDesk ID. This is the main challenge.
          # The location of the ID file may vary.
          RUSTDESK_ID=$(rustdesk --get-id)
          echo "Your RustDesk ID is: $RUSTDESK_ID"
          echo "Please connect using this ID and your pre-set password."
          
          # Keep the job running for a limited time to allow a connection
          # You can cancel the job manually from the Actions tab when you are finished.
          echo "Session will remain active for 30 minutes. You can cancel manually."
          sleep 1800 # 30 minutes
