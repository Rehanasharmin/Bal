name: RustDesk Server with ID Display

on:
  workflow_dispatch:

jobs:
  rustdesk-server:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # 6 hour max

    steps:
    - name: Install dependencies
      run: sudo apt update && sudo apt install -y wget unzip

    - name: Setup RustDesk Server
      run: |
        # Download and extract
        wget https://github.com/rustdesk/rustdesk-server/releases/latest/download/rustdesk-server-linux-amd64.zip
        unzip rustdesk-server-linux-amd64.zip -d rustdesk-server
        
        # Navigate to binary directory
        cd rustdesk-server/amd64
        chmod +x hbbr hbbs
        
        # Start services with logging
        nohup ./hbbs -r 0.0.0.0 > hbbs.log 2>&1 &
        nohup ./hbbr > hbbr.log 2>&1 &
        
        # Wait longer for ID generation (up to 30 seconds)
        for i in {1..30}; do
          if grep -q "ID" hbbs.log; then
            break
          fi
          sleep 1
        done

        # Get ID or set default message
        if grep -q "ID" hbbs.log; then
          echo "SERVER_ID=$(grep 'ID' hbbs.log | tail -1 | awk '{print $NF}')" >> $GITHUB_ENV
        else
          echo "SERVER_ID=ID_NOT_FOUND_CHECK_LOGS" >> $GITHUB_ENV
        fi

    - name: Display connection info
      run: |
        echo "===================================="
        echo "üñ•Ô∏è RUSTDESK SERVER INFORMATION"
        echo "üîë Server ID: ${{ env.SERVER_ID }}"
        echo ""
        echo "üìã Full connection details:"
        if [ -f "rustdesk-server/amd64/hbbs.log" ]; then
          cat rustdesk-server/amd64/hbbs.log | grep -A 5 -B 2 "ID"
        fi
        echo ""
        echo "‚ö†Ô∏è Note: Password generates on first connection"
        echo "          Session expires after 6 hours"
        echo "===================================="
        
        # Keep alive
        sleep 6h
