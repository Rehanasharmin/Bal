name: RustDesk Server Setup

on:
  workflow_dispatch:

jobs:
  rustdesk-server:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # 6 hour max

    steps:
    - name: Install dependencies
      run: sudo apt update && sudo apt install -y wget unzip

    - name: Setup RustDesk Server
      run: |
        # Clean and setup
        rm -rf rustdesk-server || true
        wget https://github.com/rustdesk/rustdesk-server/releases/latest/download/rustdesk-server-linux-amd64.zip
        unzip rustdesk-server-linux-amd64.zip -d rustdesk-server
        cd rustdesk-server/amd64
        chmod +x hbbr hbbs

        # Start services with debug logging
        RUST_LOG=debug nohup ./hbbs -r 0.0.0.0 > hbbs.log 2>&1 &
        RUST_LOG=debug nohup ./hbbr > hbbr.log 2>&1 &
        
        # Wait for ID generation
        for i in {1..30}; do
          if grep -q "ID" hbbs.log; then
            REMOTE_ID=$(grep "ID" hbbs.log | tail -1 | awk '{print $NF}')
            echo "REMOTE_ID=$REMOTE_ID" >> $GITHUB_ENV
            break
          fi
          sleep 1
        done

        # Get public IP
        echo "SERVER_IP=$(curl -s ifconfig.me)" >> $GITHUB_ENV

    - name: Display Connection Info
      run: |
        echo "=========================================="
        echo "üñ•Ô∏è RUSTDESK CONNECTION INSTRUCTIONS"
        echo ""
        echo "YOUR REMOTE ID: ${{ env.REMOTE_ID }}"
        echo ""
        echo "IN YOUR RUSTDESK CLIENT:"
        echo "1. Click 'Remote ID' input box"
        echo "2. Enter this ID: ${{ env.REMOTE_ID }}"
        echo "3. Password will generate automatically"
        echo ""
        echo "If connection fails:"
        echo "- Wait 1-2 minutes after startup"
        echo "- Check full logs below for errors"
        echo "=========================================="
        echo ""
        echo "üìú Full Server Logs:"
        cat rustdesk-server/amd64/hbbs.log || echo "No logs found"
        
        # Keep alive
        sleep 6h
